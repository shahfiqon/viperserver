# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2011-2020 ETH Zurich.

akka {

  # loglevel = "DEBUG"

  stream {
    materializer {
      # Cleanup leaked publishers and subscribers when they are not used within a given
      # deadline
      subscription-timeout {
        # when the subscription timeout is reached one of the following strategies on
        # the "stale" publisher:
        # cancel - cancel it (via `onError` or subscribing to the publisher and
        #          `cancel()`ing the subscription right away
        # warn   - log a warning statement about the stale element (then drop the
        #          reference to it)
        # noop   - do nothing (not recommended)
        mode = warn

        # time after which a subscriber / publisher is considered stale and eligible
        # for cancelation (see `akka.stream.subscription-timeout.mode`)
        timeout = 5s # 5s is the default

        # in the ViperServer case, this setting is relevant e.g. for streaming the messages
        # that are in the queue. In particular, the queue would get completed (when the mode is set
        # to `cancel`, which is Akka's default) if the messages do not get streamed within the
        # timeout. Trying to enqueue any message into the queue after the timeout has been triggered
        # results in exceptions. LA 15.5.2022: I've observed this for input files whose parsing takes
        # longer than the configured timeout and using viper_client that only starts streaming messages
        # after 10s (also more than the configured timeout).
      }
    }
  }

  http {

    server {
      # The default value of the `Server` header to produce if no
      # explicit `Server`-header was included in a response.
      # If this value is the empty string and no header was included in
      # the request, no `Server` header will be rendered at all.
      server-header = akka-http/${akka.http.version}

      # "PREVIEW" features that are not yet fully production ready.
      # These flags can can change or be removed between patch releases.
      preview {
        # ONLY WORKS WITH `bindAndHandleAsync` (currently)
        #
        # If this setting is enabled AND the akka-http2-support is found
        # on the classpath the usual Http().bind... method calls will bind
        # using HTTP/2. Please note that you must configure HTTPS while doing so.
        enable-http2 = off
      }

      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle connection timeouts.
      idle-timeout = infinite

      # Defines the default time period within which the application has to
      # produce an HttpResponse for any given HttpRequest it received.
      # The timeout begins to run when the *end* of the request has been
      # received, so even potentially long uploads can have a short timeout.
      # Set to `infinite` to completely disable request timeout checking.
      #
      # If this setting is not `infinite` the HTTP server layer attaches a
      # `Timeout-Access` header to the request, which enables programmatic
      # customization of the timeout period and timeout response for each
      # request individually.
      request-timeout = 5 s
    }
  }
}